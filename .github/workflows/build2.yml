name: Build and Deploy Windows IDE 2

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      NODE_VERSION: '20' # Updated Node.js version to v20 LTS

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build the IDE
        run: yarn gulp vscode-win32-x64

      - name: Verify Build Output
        shell: bash
        run: |
          if [ ! -d "path/to/your/build/output" ]; then
            echo "Build output directory not found!"
            exit 1
          fi

      - name: Create Release Tag
        id: create_tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
            echo "Tag exists: ${GITHUB_REF}"
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          else
            TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Compress Build Artifact
        run: Compress-Archive -Path "path/to/your/build/output/*" -DestinationPath windows-ide-build.zip

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-ide-build
          path: windows-ide-build.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-ide-build
          path: ./build

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          release_name: "Windows IDE Build ${{ needs.build.outputs.tag_name }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows-ide-build.zip
          asset_name: windows-ide-build.zip
          asset_content_type: application/zip
