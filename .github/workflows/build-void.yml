name: Build Void Windows IDE

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        repository: voideditor/void
        ref: ${{ github.event.inputs.branch }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: pwsh
      run: |
        $npmCacheDir = npm config get cache
        echo "NPM_CACHE_DIR=$npmCacheDir" >> $env:GITHUB_OUTPUT
        echo "NPM cache directory: $npmCacheDir"

    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.NPM_CACHE_DIR }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install Yarn
      run: npm install -g yarn

    - name: Get yarn cache directory path
      id: yarn-cache-dir
      shell: pwsh
      run: |
        $yarnCacheDir = $(yarn cache dir)
        echo "YARN_CACHE_DIR=$yarnCacheDir" >> $env:GITHUB_OUTPUT
        echo "Yarn cache directory: $yarnCacheDir"

    - name: Cache yarn dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Cache node_modules
      uses: actions/cache@v3
      id: cache-node-modules
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: |
        yarn --frozen-lockfile --verbose
      continue-on-error: true

    - name: Build Void
      run: yarn gulp vscode-win32-x64
      continue-on-error: true

    - name: Create Release ZIP
      run: Compress-Archive -Path .\VSCode-win32-x64 -DestinationPath ..\VoidIDE-Windows.zip
      continue-on-error: true

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: VoidIDE-Windows
        path: ..\VoidIDE-Windows.zip
      if: always()

    - name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          **/*.log
          **/yarn-error.log
      if: always()
